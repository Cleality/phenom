do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==2) then v9=getfenv or function()return _ENV;end;v10=setmetatable;v11=pcall;v12=select;v0=3;end if (v0==3) then v13=unpack or table.unpack;v14=tonumber;v15=nil;function v15(v16,v17)local v18=0;local v19;local v20;local v21;local v22;local v23;local v24;local v25;local v26;local v27;local v28;local v29;local v30;while true do if (v18==2) then function v23()local v39=0;local v40;local v41;while true do if (v39==(1020 -(602 + 417))) then return (v41 * (627 -371)) + v40;end if (v39==(1320 -(728 + 592))) then v40,v41=v2(v16,v19,v19 + 2 + 0 + 0);v19=v19 + 2;v39=(1474 -(1036 + 437)) + 0;end end end v24=nil;function v24()local v42=0 -0;local v43;local v44;local v45;local v46;while true do if (v42==0) then v43,v44,v45,v46=v2(v16,v19,v19 + 3);v19=v19 + ((731 + 326) -(716 + 337));v42=1019 -(70 + 948);end if (v42==(2 -1)) then return (v46 * (28710178 -11932962)) + (v45 * (124836 -59300)) + (v44 * 256) + v43;end end end v25=nil;v18=3;end if (v18==5) then v30=nil;function v30(v31,v32,v33)local v47=v31[1];local v48=v31[2];local v49=v31[3];return function(...)local v67=1;local v68= -1;local v69={...};local v70=v12("#",...) -1;local function v71()local v76=v47;local v77=Const;local v78=v48;local v79=v49;local v80=v28;local v81={};local v82={};local v83={};for v89=0 + 0,v70 do if (((1776 + 1502)==(3462 -(21 + 163))) and (v89>=v79)) then v81[v89-v79]=v69[v89 + 1 + 0];else v83[v89]=v69[v89 + (1002 -(122 + 879))];end end local v84=(v70-v79) + (1343 -(547 + 795));local v85;local v86;while true do local v90=775 -(41 + 734);local v91;local v92;while true do if (((1428 -(970 + 104))<=(5027 -3231)) and (v90==(0 + 0))) then v91=0 + 0;v92=nil;v90=1;end if (((9706 -5645)<=(11723 -7069)) and (v90==(2 -1))) then while true do if ((v91==(231 -(185 + 46))) or ((4210 -2195)<(1979 -(759 + 522)))) then v92=147 -(10 + 137);while true do if (((1838 + 1953)>(2962 + 262)) and (v92==(0 -0))) then local v101=0 -0;local v102;while true do if (((7916 -5415)>=(2007 -(82 + 598))) and (v101==(0 -0))) then v102=0 + 0;while true do if ((v102==(1408 -(530 + 878))) or ((5739 -3472)>((17118 -11382) -(353 + 1285)))) then v85=v76[v67];v86=v85[1];v102=1808 -(1588 + 219);end if (((3570 + 440)==(5176 -(133 + 1033))) and (v102==(449 -(109 + 339)))) then v92=3 -2;break;end end break;end end end if (((1 + 0)==v92) or ((6185 -(544 + 723))<=(1775 -(474 + 202)))) then if ((v86<=(687 -(605 + 71))) or (((11048 -6869) -((528 -292) + 471))<=(3734 -(320 + 1608)))) then if (((2594 -((1210 -(908 + 290)) + 1537))<=((14183 -(811 + 529)) -(38684 -28533))) and (v86<=(3 + 2))) then if ((v86<=(3 -1)) or ((215 + 214)<=(479 -285))) then if ((v86<=((2588 -1009) -(518 + (1874 -813)))) or ((580 + 433)>=(3644 -(1100 + 688)))) then local v107=(0 -0) + (1342 -(1213 + 129));local v108;local v109;local v110;local v111;while true do if ((v107==(1 -0)) or ((4536 -2499)<(1765 -(838 + 204)))) then v110=nil;v111=nil;v107=4 -2;end if ((v107==(0 + 0)) or ((3518 -2108)==(1817 + 1723))) then v108=0 -0;v109=nil;v107=2 -1;end if (((19343 -14527)>(2748 -((1939 -(1391 + 6)) + 180))) and (v107==(1 + 1))) then while true do if (((930 + 789)<(1724 + (6047 -3780))) and (v108==((2605 -1466) -(522 + 617)))) then local v174=1207 -(5 + 1202);while true do if (((5048 -((1021 -(29 + 689)) + 1107))<(6250 -(1399 + 185))) and (v174==((799 + 505) -(555 + 749)))) then v109=0 -0;v110=nil;v174=1;end if ((v174==(1 -(200 -(104 + 96)))) or ((2963 -(850 + 108))<=1257)) then v108=(2 -1) + 0;break;end end end if (((1826 + 1946)>(2172 -(881 + 44))) and (v108==(930 -(825 + 104)))) then v111=nil;while true do if ((v109==(1193 -(11 + 1181))) or ((56 + 891)<(1233 -(732 + 389)))) then v83[v110 + 1 + 0]=v111;v83[v110]=v111[v85[(1712 -(78 + 590)) -(654 + 386)]];break;end if (((1652 + (167 -41))<((627 + 4270) -((589 -293) + (1238 -(713 + 22))))) and (v109==(0 + 0))) then local v191=228 -(176 + 52);while true do if ((v191==(1 -0)) or ((5967 -2260)<(1482 -(13 + 38)))) then v109=2 -1;break;end if (((3841 -(31 + 23 + 321))<(2090 + 2855)) and (v191==(0 + (0 -0)))) then local v211=0 + 0;while true do if ((v211==(3 -2)) or ((6239 -1762)==((1 + 1) -1))) then v191=1779 -(1280 + (1791 -(797 + 496)));break;end if (((58 -(11 + 47))==v211) or ((1862 + 1844 + 157)<(4442 -(227 + 886)))) then v110=v85[2];v111=v83[v85[(3904 -2481) -(704 + 716)]];v211=1 + 0;end end end end end end break;end end break;end end elseif ((v86==(1 -0)) or ((4648 -2019)<(420 + 1003))) then v67=v85[2 + 1];else do return;end end elseif ((v86<=(1 + 2)) or ((5063 -(248 + 125))<=(432 + 64))) then if ((v83[v85[2 + 0]]==v85[3 + 1]) or ((6579 -1603)==(1830 -((1285 -638) + 778)))) then v67=v67 + (1643 -(1375 + 267));else v67=v85[1 + 2];end elseif ((v86>4) or ((1613 + (1091 -(253 + 220)))>=(552 + 430 + 2142))) then local v125=0 + (0 -0);local v126;while true do if ((v125==(1625 -(687 + 938))) or ((3520 -1867)<=(2223 -(1482 + 31)))) then v126=v85[3 -1];v83[v126](v83[v126 + (3 -2)]);break;end end else local v127=(1975 -(781 + 1194)) -0;local v128;local v129;local v130;local v131;while true do if ((v127==(737 -(240 + 495))) or ((4426 -(115 + 23))==(8763 -4295))) then while true do if (((2531 + 81)<=(14742 -(28603 -17738))) and (v128==(1575 -(698 + 876)))) then v131=752 -(726 + 26);for v192=v129,v85[392 -(268 + (228 -108))] do local v193=0 -0;local v194;local v195;while true do if ((v193==1) or ((2992 -(237 + 301))<=(1832 -1439))) then while true do if ((v194==(0 -0)) or ((4985 -((1086 -380) + 273))<=(1942 + 479))) then v195=(2312 -(1047 + 723)) -((1804 -(41 + 1495)) + 274);while true do if ((((1552 -(697 + 466)) + (762 -(98 + 214)))<((1371 + 1528) -865)) and (v195==((1909 -(1289 + 620)) + 0))) then v131=v131 + (1945 -(318 + 1367 + 259));v83[v192]=v130[v131];break;end end break;end end break;end if (((9584 -4669)==(6163 -(349 + 899))) and (v193==(0 + 0))) then v194=0 -0;v195=nil;v193=1 -0;end end end break;end if ((v128==(0 + 0)) or ((5301 -2830)>(12202 -7883))) then local v181=0 -0;while true do if (((2208 -1133)>(2685 -(376 + 1599))) and (v181==(3 -2))) then v128=1 + 0;break;end if (((1707 -(949 + 335))<3410) and (v181==(1531 -(1348 + 183)))) then v129=v85[1785 -(671 + 1112)];v130={v83[v129](v13(v83,v129 + (1336 -(842 + (2160 -(506 + 1161)))),v68))};v181=1024 -(727 + (774 -478));end end end end break;end if ((((674 + 38) -(206 + 375))<=2731) and (v127==((1 -0) -0))) then v130=nil;v131=nil;v127=1518 -(312 + 1204);end if ((v127==(0 + (0 -0))) or ((189 + 100)>(3411 -((5184 -4103) + 549)))) then v128=0 + 0;v129=nil;v127=1647 -(747 + (3309 -2410));end end end elseif (((4229 -(8 + 120))<(9276 -(5997 -(403 + 596)))) and (v86<=(26 -18))) then if ((v86<=(22 -16)) or ((3866 -(917 + 739))==(1333 -(652 + 154)))) then v83[v85[1118 -(19 + 1097)]]=v83[v85[887 -(653 + 195 + 36)]];elseif ((v86==(1829 -(1186 + 163 + 473))) or ((7343 -(8724 -3325))<=((805 + 680) -(117 + 1236)))) then v83[v85[1 + (1664 -(518 + 1145))]][v85[1 + 2]]=v85[1130 -(861 + 265)];else local v133=1744 -(583 + 1161);local v134;local v135;local v136;local v137;local v138;while true do if (((1942 -((2020 -(130 + 150)) + 201))==v133) or ((1453 + 1054)>=(4942 -((2127 -(1128 + 685)) + 455)))) then v136=nil;v137=nil;v133=2 + 0;end if ((2490<4478) and (v133==((0 + 0) -0))) then v134=1967 -(1246 + 721);v135=nil;v133=1737 -(73 + 1663);end if (((1 + 1)==v133) or ((9087 -4489)<((6259 -(1028 + 891)) -1549))) then v138=nil;while true do if (((4186 + 571)>=(12214 -7864)) and (v134==((0 -0) + (0 -0)))) then local v182=0 -0;while true do if ((((1330 -657) + 1620)==(2449 -(45 + 111))) and (v182==(310 -(177 + 133)))) then v135=(2014 -(113 + 1169)) -(161 + 571);v136=nil;v182=1883 -(627 + (1546 -(172 + 119)));end if (((9635 -6384)==(4791 -(1457 + 83))) and (v182==(361 -(140 + 220)))) then v134=379 -((697 -(221 + 462)) + 364);break;end end end if ((((1227 -379) -376)>450) and (v134==((134 -(18 + 109)) -5))) then while true do if ((v135==(1741 -(154 + 1586))) or ((8759 -(5592 -(1019 + 221)))==(1710 + 2065))) then local v198=1423 -(569 + 854);while true do if (((3343 + 110)==(1157 + 2296)) and (v198==(0 -0))) then local v225=0 -0;while true do if (((0 + 0)==v225) or ((5541 -((2129 -969) + 426))<3749)) then v138={};v137=v10({},{__index=function(v245,v246)local v255=(258 -(127 + 131)) -0;local v256;while true do if (((1909 + (1602 -1150))>=(6180 -4324)) and (v255==(1490 -(1427 + 63)))) then v256=v138[v246];return v256[2 -1][v256[2 + 0]];end end end,__newindex=function(v247,v248,v249)local v257=0 + 0;local v258;while true do if (((2732 -1568)<=(2484 -(48 + 123))) and (v257==((1084 + 209) -((318 -(29 + 144)) + 1148)))) then v258=v138[v248];v258[1851 -(1444 + 406)][v258[3 -1]]=v249;break;end end end});v225=1 + 0;end if ((((741 + 435) -(1132 -(686 + 163)))<(4587 -(47 + 1366))) and (v225==(2 -1))) then v198=1 + (0 -0);break;end end end if (((6027 -2994)<(12095 -8195)) and ((2 -1)==v198)) then v135=2 -0;break;end end end if ((((1773 + 926) -((2356 -(1166 + 628)) + 974))>((1027 -418) -444)) and (v135==(2 -0))) then for v212=1845 -(816 + 1028),v85[5 -1] do local v213=0 -0;local v214;while true do if (((407 -(140 + 106))==(1588 -(543 + 884))) and (v213==(1 -0))) then if ((((8295 -2071) -4092)<(2697 + 2074)) and (v214[1 -0]==(1014 -(808 + 200)))) then v138[v212-(1 -0)]={v83,v214[3]};else v138[v212-1]={v32,v214[(329 -(160 + 155)) -11]};end v82[ #v82 + (1138 -(927 + 210))]=v138;break;end if (((157 + 7)<=(688 + 3679)) and (v213==(0 -0))) then v67=v67 + 1 + 0;v214=v76[v67];v213=1 + 0;end end end v83[v85[2 -(72 -(15 + 57))]]=v30(v136,v137,v33);break;end if (((2974 -(53 + 367))<=(5544 -1711)) and (v135==((961 + 61) -(631 + 391)))) then local v200=0 + 0;local v201;while true do if ((v200==((951 -(794 + 157)) -0)) or ((3859 -(75 + 16))>=(5265 -(151 + 146)))) then v201=0 -0;while true do if ((v201==1) or ((14820 -10858)<=(12874 -9434))) then v135=951 -(724 + 226);break;end if ((v201==(0 -0)) or ((6387 -(303 + 1205))<=((474 + 617) -(113 + 70)))) then local v240=0 -0;while true do if (((922 -677)<=(5939 -4314)) and (v240==0)) then v136=v78[v85[566 -(461 + 102)]];v137=nil;v240=2 -1;end if ((v240==1) or ((2989 -(457 + 4))==(7748 -(1173 + 2471)))) then v201=2 -1;break;end end end end break;end end end end break;end if ((v134==(2 -1)) or (3268<=(1273 + 245))) then local v183=0;while true do if (((4292 -2627)<=(3226 -(65 + 2 + 1))) and (v183==(1366 -(1192 + 174)))) then v137=nil;v138=nil;v183=1 + 0;end if (((1978 + 783)>=(1903 -(702 + 470))) and ((1 + 0)==v183)) then v134=198 -(105 + 91);break;end end end end break;end end end elseif (((7457 -3436)>(3227 -(193 + 808))) and (v86<=(3 + 6))) then local v113=0 -0;local v114;local v115;while true do if ((v113==(0 -0)) or ((5510 -((1049 -695) + 765))==(2090 + 206))) then v114=571 -(108 + 463);v115=nil;v113=1 + 0;end if (((5519 -(774 + 699))>=(2773 -(181 + 1040))) and (v113==(431 -(114 + 106 + (1186 -(70 + 906)))))) then while true do if ((v114==(0 -0)) or ((8551 -4898)<(385 -240))) then v115=v85[1 + 1];v83[v115]=v83[v115](v83[v115 + (1797 -(543 + 1253))]);break;end end break;end end elseif ((v86==(5 + 5)) or ((410 + 757)<=(1058 + 10))) then v83[v85[1 + (757 -(731 + 25))]]=v32[v85[10 -7]];else v83[v85[2 -0]]=v33[v85[2 + 1]];end elseif (((3577 -(246 + 278))>(2925 -(379 + 65))) and (v86<=17)) then if (((184 + (2216 -1429))==(608 + 363)) and (v86<=(32 -(16 + 2)))) then if ((v86<=(1982 -(856 + 1114))) or ((118 + 3727)<=(952 + 562))) then local v116=19 -((1077 -(835 + 234)) + 11);local v117;local v118;local v119;while true do if (((1493 + 2316)<(5975 -(43 + 119 + 1266))) and (v116==(0 + 0))) then v117=0 + 0;v118=nil;v116=2 -1;end if ((v116==(1 -(645 -(425 + 220)))) or ((3368 + 290 + 184)==(7595 -4186))) then v119=nil;while true do if ((((0 -0) -0)==v117) or ((1925 + 2766)<(4676 -((642 -(252 + 343)) + 453)))) then local v176=0 -0;while true do if (((3593 + (2892 -(1324 + 169)))>=(3105 -2023)) and (v176==(0 -0))) then v118=v85[184 -(132 + 50)];v119={};v176=1;end if ((v176==(1 -0)) or ((2932 -1267)>=(5726 -(351 + 692)))) then v117=688 -(34 + 653);break;end end end if ((v117==(1352 -(1062 + 289))) or ((16 + (61 -38))>=(6790 -3942))) then for v177=(1 + 0) -0, #v82 do local v178=0 + (957 -(805 + 152));local v179;local v180;while true do if ((v178==(1391 -(598 + 793))) or ((1785 + 1025)==174)) then v179=0;v180=nil;v178=419 -(47 + 371);end if (((5179 -(1359 + 13 + 120))<(8925 -4906)) and (v178==((3164 -1525) -(353 + 1285)))) then while true do if (((10749 -(7851 -(319 + 297)))==(2820 + 694)) and (v179==(0 -0))) then v180=v82[v177];for v226=983 -(166 + 817), #v180 do local v227=0 -(0 + 0);local v228;local v229;local v230;while true do if ((v227==(0 + 0)) or (2602==(1643 -1073))) then v228=v180[v226];v229=v228[1184 -(69 + 1114)];v227=1186 -(228 + 957);end if (((1545 + 1549)>=(4467 -(985 + 850))) and (v227==(3 -(2 -0)))) then v230=v228[701 -(528 + 171)];if (((v229==v83) and (v230>=v118)) or ((3048 -(2313 -1088))>(3333 -(38 + 22 + 34)))) then local v259=0 + 0;local v260;local v261;while true do if ((v259==(398 -(381 + 16))) or ((9745 -5646)<(411 + 2160))) then while true do if ((v260==(0 + 0)) or (3436>(1423 + 2823))) then v261=0 + 0;while true do if ((v261==((200 -(5 + 195)) + 0)) or ((10933 -6674)<(9476 -7131))) then v119[v230]=v229[v230];v228[1 + (0 -0)]=v119;break;end end break;end end break;end if ((v259==(1141 -(552 + 589))) or ((3459 -(273 + 493))>(11058 -6903))) then v260=0 -0;v261=nil;v259=1 + 0 + 0 + 0;end end end break;end end end break;end end break;end end end break;end end break;end end elseif ((v86>(7 + 6)) or ((413 + 1040)>(4086 + 222))) then local v141=0 -0;local v142;while true do if (((389 + 1197)>(1190 -(202 + (2083 -1291)))) and ((919 -(195 + 724))==v141)) then v142=v85[2 + 0];v83[v142]=v83[v142](v13(v83,v142 + (1365 -(442 + 158 + 764)),v85[3 -0]));break;end end else v83[v85[6 -4]]=v83[v85[1016 -(320 + (1239 -546))]][v85[702 -(195 + (1585 -(240 + 842)))]];end elseif (((12266 -9032)<=(16299 -11879)) and (v86<=((11 -4) + 8))) then for v123=v85[(844 -490) -(19 + (849 -516))],v85[535 -((655 -(276 + 189)) + 342)] do v83[v123]=nil;end elseif ((v86==(46 -30)) or ((2499 -1021)<(1604 -(1142 + 277)))) then v83[v85[2]]=v85[2 + 1]~=(0 + 0);elseif ((v85[2 -(691 -(123 + 568))]==v83[v85[4 + 0]]) or ((3664 -(948 + 884))<(1820 -904))) then v67=v67 + (1 -0);else v67=v85[645 -(160 + 482)];end elseif (((3757 -(139 + 1555))==(2273 -(98 + 112))) and (v86<=20)) then if (((606 + 1021)>=(1219 + 177)) and (v86<=18)) then v83[v85[5 -(1262 -(222 + 1037))]]=v85[3 + 0];elseif (((4456 -2835)<=(3335 -(1208 + 433))) and (v86>(77 -58))) then local v145=1385 -(1085 + 300);local v146;local v147;local v148;local v149;local v150;local v151;local v152;while true do if ((v145==(0 + 0)) or ((2572 -(795 + 670))==(2952 -(274 + 44)))) then v146=0 + 0;v147=nil;v145=1 -0;end if (((106 + 1)<1913) and (v145==(2 + 1))) then v152=nil;while true do if ((v146==(0 -(1951 -(655 + 1296)))) or (((362 + 1806) -377)>(3724 -1817))) then v147=(0 -0) + 0;v148=nil;v146=1 + 0;end if (((910 + 2447)>(2670 -959)) and (((7 -4) -1)==v146)) then v151=nil;v152=nil;v146=2 + 1;end if (((11841 -6955)>(50 + 332)) and ((1 + 2)==v146)) then while true do if (((2602 -(412 + 45))>(2051 -(153 + 44 + 319))) and (v147==(0 + 0))) then local v202=0 -0;local v203;while true do if ((v202==(747 -(343 + 404))) or ((4637 -(867 + 61))==((4855 -3071) -1208))) then v203=0 + 0;while true do if ((v203==(623 -(281 + 342))) or ((6420 -((2269 -(300 + 801)) + 335 + 210))>=(20617 -15835))) then local v241=0 -0;while true do if ((v241==(1 + 0)) or ((4702 -(95 + 18 + 233))>=(15215 -10554))) then v203=(168 -(28 + 139)) + (0 -0);break;end if (((2597 -837)<=((6842 -(130 + 1293)) -(468 + 966))) and ((0 -0)==v241)) then v148=v85[(30 -22) -(6 + 0)];v149=v85[4];v241=(699 -(145 + 280)) -(240 + 33);end end end if ((((2872 + 3801) -(1204 + 619))>(980 + 811)) and (v203==(2 -1))) then v147=1;break;end end break;end end end if (((112 + 716)>(148 + 470)) and ((3 + 0)==v147)) then if (v152 or ((4962 -3532)>(286 + 1244))) then local v223=0 + 0;local v224;while true do if ((v223==(0 + 0)) or ((1121 + 1576 + 1737)<=3100)) then v224=0 + 0;while true do if (((5592 -(3181 + 41))<=(6470 -(493 + 1267))) and (v224==(0 -0))) then v83[v150]=v152;v67=v85[3 + 0];break;end end break;end end else v67=v67 + 1 + 0 + 0;end break;end if (((184 + 98)>(39 + 147)) and (v147==(1 + 1))) then local v204=0 + 0 + 0;local v205;while true do if (((0 -0)==v204) or (75==(3129 -((1934 -(553 + 916)) + 562)))) then v205=0 + 0;while true do if (((7711 -5745)>(1364 -(381 + 400))) and (v205==(0 + 0))) then local v242=0 -(0 -0);while true do if (((747 + 44)<(8845 -5174)) and (v242==(1770 -(193 + 1577)))) then for v264=(166 + 64) -(45 + 184),v149 do v83[v150 + v264]=v151[v264];end v152=v151[1546 -(1121 + 424)];v242=1;end if ((v242==(4 -3)) or ((880 -(63 + 81))<=((165 + 914) -(123 + 304)))) then v205=1 -0;break;end end end if ((v205==1) or ((4270 -1332)<=2092)) then v147=5 -2;break;end end break;end end end if ((v147==(1080 -(400 + 679))) or ((2144 -(242 + 1346))>=(14682 -10626))) then local v206=0 + (0 -0);local v207;while true do if ((v206==(0 + 0 + 0)) or ((4133 -(195 + 510))==(379 + 2543))) then v207=631 -(433 + 198);while true do if ((v207==((1761 -(1336 + 425)) -0)) or ((4895 -(110 + 826))==(9458 -6965))) then v150=v148 + (3 -1);v151={v83[v148](v83[v148 + (3 -2)],v83[v150])};v207=404 -(186 + 20 + 197);end if ((v207==1) or ((836 -448)==(9373 -4673))) then v147=99 -(30 + 67);break;end end break;end end end end break;end if (((1 + 0)==v146) or ((1228 + 7 + 28)<(414 + 84))) then local v184=(0 -0) + 0;while true do if (((13149 -8404)>(4367 -(204 + 240))) and (v184==(224 -(61 + (397 -235))))) then v146=4 -2;break;end if (((2920 -(296 + 205))<=(1792 + 2916)) and (v184==(623 -(575 + 48)))) then v149=nil;v150=nil;v184=4 -3;end end end end break;end if (((560 + 1647)<=(4581 -(856 + 1061))) and (v145==(1105 -(393 + 710)))) then v150=nil;v151=nil;v145=1 + 2;end if ((v145==(1 + 0)) or ((12994 -9295)>=(5583 -((931 -544) + 271)))) then v148=nil;v149=nil;v145=7 -5;end end else v83[v85[1 + (3 -2)]]();end elseif (((5751 -(1905 + 1676))<=(3963 -(58 + 802))) and (v86<=22)) then if ((v86>(69 -48)) or ((3943 + 66)==((4802 -2900) -(66 + 931)))) then local v153=0 -0;local v154;local v155;while true do if ((v153==(1 + 0)) or (625>(971 + 1651))) then while true do if (((2658 -(780 + 574))<=(39 + 4693)) and (v154==(1321 -(735 + 586)))) then v155=v85[(5 + 0) -3];v83[v155](v13(v83,v155 + (1427 -(426 + 1000)),v85[8 -5]));break;end end break;end if (((32 + 192)==(639 -415)) and (v153==(645 -(539 + (982 -(60 + 816)))))) then v154=0 + 0;v155=nil;v153=1 + 0;end end else v83[v85[7 -5]]=v30(v78[v85[2 + 1]],nil,v33);end elseif ((v86>(87 -(7 + 7 + 50))) or ((806 + 392)>(5756 -2268))) then v83[v85[1798 -(395 + 1401)]][v85[11 -8]]=v83[v85[2 + 2]];else local v158=0 + 0;local v159;local v160;local v161;local v162;local v163;while true do if (((2642 -1619)<2153) and (v158==(0 + 0))) then local v165=(0 -0) -0;while true do if (((515 + 1963)<=(4661 -(141 + 372))) and (v165==(42 -(22 + 19)))) then v158=1 + 0;break;end if ((v165==(0 + 0)) or ((9459 -(2871 + 3055))==(864 + 270))) then v159=0 + 0;v160=nil;v165=1 + 0;end end end if ((v158==(2 + 0)) or ((9702 -6510)>(1776 + 2226))) then v163=nil;while true do if (((1810 -(734 + 1075))==v159) or ((101 -43)>(16530 -12029))) then local v185=0 + 0;local v186;while true do if ((186>43) and (v185==(700 -(348 + 352)))) then v186=0 + 0;while true do if ((v186==(0 -0)) or ((2347 -(313 + 1376))>=(10906 -7212))) then local v231=1493 -(1374 + 119);while true do if (((8524 -(5528 -(230 + 1702)))>=(4491 -(22 + 1662))) and (v231==(1 + 0))) then v186=3 -(1 + 1);break;end if ((4021<=(24745 -19776)) and (v231==(0 + 0))) then v68=(v162 + v160) -(681 -(356 + 324));v163=0 -(1943 -(605 + 1338));v231=1 + 0;end end end if (((981 + 1546)>=(125 + 1128)) and (v186==(1 -0))) then v159=3 -1;break;end end break;end end end if ((v159==(4 -2)) or ((61 + 131)==(159 + 597))) then for v196=v160,v68 do local v197=0 -(504 -(184 + 320));while true do if (((2907 -(315 + 1481))<=((3899 -(17 + 36)) -2285)) and ((0 -0)==v197)) then v163=v163 + (1 -0);v83[v196]=v161[v163];break;end end end break;end if (((479 + 3397)>(565 + 228)) and (v159==(0 + 0))) then local v187=207 -(104 + 103);while true do if (((3393 -(127 + 3))>=(478 -266)) and (v187==((1049 -(1004 + 44)) + 0))) then v159=1 + (302 -(22 + 280));break;end if ((v187==(0 + 0)) or ((2606 + (1473 -(158 + 232)))==((3052 + 2951) -((3000 -(324 + 1511)) + 576)))) then local v208=(5291 -3378) -(1224 + 689);while true do if (((431 + 1116)<(3515 -(3684 -2589))) and (v208==(0 + 0 + 0))) then v160=v85[277 -(232 + 43)];v161,v162=v80(v83[v160](v83[v160 + 1]));v208=1 -0;end if (((4745 -(784 + 840))>=((389 -225) + 104)) and (v208==(1 -0))) then v187=1 + (1145 -(465 + 680));break;end end end end end end break;end if (((2104 + 1986)>=(115 + 336)) and (v158==(3 -2))) then v161=nil;v162=nil;v158=2 + 0;end end end v67=v67 + (1708 -(1675 + 32));break;end end break;end end break;end end end end A,B=v28(v11(v71));if  not A[1] then local v87=0;local v88;while true do if (0==v87) then v88=v31[4][v67] or "?";error("Script error at ["   .. v88   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end end;end return v30(v29(),{},v17)();end if (v18==3) then function v25()local v50=v24();local v51=v24();return (( -(3 -1) * v21(v51,1307 -(314 + 961))) + (244 -((678 -481) + (1479 -(1344 + 89))))) * ((5 -3)^(v21(v51,21,1 + 30) -(230 + 793))) * ((((v21(v51,1 + 0,419 -(155 + 244)) * ((8 -(21 -15))^(928 -((693 -303) + (1906 -(1055 + 345)))))) + v50)/((5 -3)^52)) + 1);end v26=nil;function v26(v34)local v52;if  not v34 then v34=v24();if (v34==0) then return "";end end v52=v4(v16,v19,(v19 + v34) -(1426 -(641 + 784)));v19=v19 + v34;local v53={};for v65=745 -(421 + 323), #v52 do v53[v65]=v3(v2(v4(v52,v65,v65)));end return v7(v53);end v27=v24;v18=4;end if (v18==0) then v19=1;v20=nil;v16=v5(v4(v16,5),"..",function(v35)if (v2(v35,2)==79) then v20=v1(v4(v35,1,1));return "";else local v72=0;local v73;while true do if (v72==0) then v73=v3(v1(v35,16));if v20 then local v96=v6(v73,v20);v20=nil;return v96;else return v73;end break;end end end end);v21=nil;v18=1;end if (v18==1) then function v21(v36,v37,v38)if v38 then local v74=(v36/((1337 -(467 + 868))^(v37-(2 -1))))%((906 -(739 + 165))^(((v38-(1 + (911 -(782 + 129)))) -(v37-1)) + 1 + 0));return v74-(v74%(2 -1));else local v75=(1 + (133 -(44 + 88)))^(v37-(1 + 0));return (((v36%(v75 + v75))>=v75) and (1 -0)) or (693 -(415 + 278));end end v22=nil;function v22()local v54=v2(v16,v19,v19);v19=v19 + 1;return v54;end v23=nil;v18=2;end if (v18==4) then v28=nil;function v28(...)return {...},v12("#",...);end v29=nil;function v29()local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;local v62;local v63;local v64;while true do if (v55==(2 + 1)) then v62=nil;v63=nil;v55=4;end if (v55~=0) then else v56=0;v57=nil;v55=1;end if (v55==1) then v58=nil;v59=nil;v55=2 + 0;end if (v55==(2 + 2)) then v64=nil;while true do if (v56~=1) then else v59=nil;v60=nil;v56=2;end if (v56==2) then v61=nil;v62=nil;v56=3;end if (v56==(11 -7)) then while true do if (v57~=(2 -0)) then else local v97=0 + 0;local v98;while true do if (v97~=0) then else v98=0;while true do if (v98==0) then v62=nil;v63=nil;v98=668 -(230 + 437);end if (v98~=(527 -(344 + 182))) then else v57=3;break;end end break;end end end if (v57==(0 + 0)) then v58=1897 -(1752 + 145);v59=nil;v57=1 + 0;end if (v57~=(6 -3)) then else v64=nil;while true do local v99=0;local v100;while true do if (v99~=0) then else v100=0;while true do if (v100~=1) then else if (2==v58) then local v105=0;local v106;while true do if (0==v105) then v106=0;while true do local v121=0;while true do if (v121~=0) then else if (v106==(0 -0)) then local v166=84 -(57 + 27);while true do if (v166==(1656 -(1592 + 64))) then local v188=0 + 0;while true do if (v188~=(1554 -(887 + 666))) then else v166=1 -0;break;end if (v188~=0) then else for v216=283 -(95 + 187),v24() do local v217=0 -0;local v218;local v219;local v220;while true do if (v217~=(1 -0)) then else v220=nil;while true do if (1~=v218) then else while true do if (v219==(0 -0)) then v220=v22();if (v21(v220,1 + 0,1 + 0)==(1811 -(605 + 1206))) then local v269=0;local v270;local v271;local v272;while true do if (v269==(1419 -(996 + 423))) then v270=v21(v220,2,11 -8);v271=v21(v220,4,18 -12);v269=1 + 0;end if (v269~=(1 -0)) then else local v273=0 -0;local v274;while true do if (v273==(117 -(7 + 110))) then v274=925 -(241 + 684);while true do if (v274==(0 -0)) then local v281=0 + 0;while true do if (v281~=1) then else v274=1;break;end if ((0 -0)==v281) then v272={v23(),v23(),nil,nil};if (v270==(1199 -(723 + 476))) then local v282=0 -0;local v283;local v284;while true do if (v282==0) then v283=1938 -(1776 + 162);v284=nil;v282=1;end if (v282~=1) then else while true do if (v283~=0) then else v284=0;while true do if (v284==0) then v272[3]=v23();v272[1479 -(699 + 776)]=v23();break;end end break;end end break;end end elseif (v270==1) then v272[3]=v24();elseif (v270==(2 + 0)) then v272[1393 -(568 + 822)]=v24() -(2^(4 + 12));elseif (v270~=(1 + 2)) then else local v287=0 + 0;while true do if (v287~=0) then else v272[10 -7]=v24() -((3 -1)^(33 -17));v272[4]=v23();break;end end end v281=1;end end end if (v274~=(1 -0)) then else v269=2;break;end end break;end end end if (v269~=3) then else if (v21(v271,3,3 + 0)==1) then v272[1156 -(1048 + 104)]=v64[v272[4]];end v59[v216]=v272;break;end if (v269==2) then if (v21(v271,183 -(128 + 54),4 -3)==1) then v272[887 -(432 + 453)]=v64[v272[3 -1]];end if (v21(v271,2,2)==1) then v272[3]=v64[v272[1 + 2]];end v269=3;end end end break;end end break;end if (v218~=(0 -0)) then else local v250=0 -0;while true do if (v250==(0 + 0)) then v219=0 -0;v220=nil;v250=1509 -(1148 + 360);end if (v250~=1) then else v218=1;break;end end end end break;end if (v217~=(0 + 0)) then else v218=0 -0;v219=nil;v217=2 -1;end end end for v221=1598 -(1564 + 33),v24() do v60[v221-(1 + 0)]=v29();end v188=1 -0;end end end if (v166==(1 + 0)) then v106=1125 -(411 + 713);break;end end end if (v106==(1 -0)) then local v167=0 -0;local v168;while true do if (v167~=(0 -0)) then else v168=1337 -(81 + 1256);while true do if (v168~=(0 -0)) then else local v209=0 + 0;while true do if (v209~=0) then else for v236=1,v24() do v61[v236]=v24();end return v62;end end end end break;end end end break;end end end break;end end end break;end if (v100==0) then local v103=0 -0;local v104;while true do if (v103==0) then v104=1818 -(1414 + 404);while true do if (v104~=(1545 -(365 + 1179))) then else v100=1;break;end if (v104==(0 -0)) then local v122=0;while true do if (v122==1) then v104=1;break;end if (v122==0) then if (v58==1) then local v169=0;local v170;local v171;while true do if ((0 + 0)~=v169) then else v170=753 -(371 + 382);v171=nil;v169=1;end if (v169==(1 + 0)) then while true do if (v170~=0) then else v171=0;while true do if (v171==(1 -0)) then local v232=0;while true do if (v232==(1098 -(790 + 307))) then v171=2;break;end if (v232==0) then for v251=1921 -(1017 + 903),v63 do local v252=744 -(572 + 172);local v253;local v254;while true do if (v252==0) then local v266=0 -0;while true do if (v266~=(0 -0)) then else v253=v22();v254=nil;v266=1182 -(631 + 550);end if (v266~=(1 + 0)) then else v252=2 -1;break;end end end if ((1524 -(678 + 845))==v252) then if (v253==(3 -2)) then v254=v22()~=0;elseif (v253==2) then v254=v25();elseif (v253==(119 -(106 + 10))) then v254=v26();end v64[v251]=v254;break;end end end v62[3]=v22();v232=1;end end end if (v171~=0) then else local v233=1626 -(780 + 846);local v234;while true do if (0==v233) then v234=0;while true do if (v234~=(2 -1)) then else v171=1;break;end if (v234~=(0 -0)) then else local v263=0;while true do if (v263==(0 -0)) then v63=v24();v64={};v263=2 -1;end if (v263~=(3 -2)) then else v234=1 + 0;break;end end end end break;end end end if (v171~=(1 + 1)) then else v58=2;break;end end break;end end break;end end end if (v58==0) then local v172=1421 -(570 + 851);local v173;while true do if (v172==0) then v173=0 + 0;while true do if (v173~=(943 -(245 + 696))) then else v58=1;break;end if (v173==0) then v59={};v60={};v173=1 + 0;end if (v173==1) then local v210=1316 -(255 + 1061);while true do if (v210~=(1 -0)) then else v173=2;break;end if (v210~=(0 -0)) then else v61={};v62={v59,v60,nil,v61};v210=1619 -(1201 + 417);end end end end break;end end end v122=1;end end end end break;end end end end break;end end end break;end if (v57==(1 + 0)) then v60=nil;v61=nil;v57=2 + 0;end end break;end if (v56==(248 -(32 + 213))) then v63=nil;v64=nil;v56=3 + 1;end if (v56~=0) then else local v93=0;while true do if (v93~=(653 -(144 + 509))) then else v57=0;v58=nil;v93=4 -3;end if (v93==(2 -1)) then v56=1;break;end end end end break;end if (v55==(1 + 1)) then v60=nil;v61=nil;v55=3;end end end v18=5;end end end v0=4;end if (0==v0) then v1=tonumber;v2=string.byte;v3=string.char;v4=string.sub;v0=1;end if (v0==1) then v5=string.gsub;v6=string.rep;v7=table.concat;v8=table.insert;v0=2;end if (v0==4) then vv9());break;end end end
